{"ast":null,"code":"var _jsxFileName = \"/Users/pabloestrada/Desktop/Internio/ui/src/components/landing_page/LoginPage/LoginPage.tsx\";\nimport React from 'react';\nimport Cookies from \"js-cookie\";\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport styles from './LoginPage.module.css';\nimport { AuthApi } from \"../../../api/index\";\nimport Logo from '../../../assets/logo.png';\nexport class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authApi = new AuthApi();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirect: false,\n      failedToLogin: false\n    };\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getJWT = this.getJWT.bind(this);\n  }\n\n  setUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  setPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.getJWT();\n  }\n\n  async getJWT() {\n    const requestParams = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.authApi.getJWT(requestParams).then(token => {\n      Cookies.set(\"jwt\", token);\n      this.setState({\n        redirect: true\n      });\n    }).catch(e => {\n      this.setState({\n        failedToLogin: true\n      });\n      console.log(e);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Grid, {\n      textAlign: \"center\",\n      className: styles.Grid,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      very: true,\n      padded: true,\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      style: {\n        height: \"15vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Internio\"), React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"placeholder text about what Internio is\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/Internio/ui/src/components/landing_page/LoginPage/LoginPage.tsx"],"names":["React","Cookies","Button","Form","Grid","Header","Segment","styles","AuthApi","Logo","LoginPage","Component","constructor","props","authApi","state","username","password","redirect","failedToLogin","setUsername","bind","setPassword","handleSubmit","getJWT","e","setState","target","value","preventDefault","requestParams","then","token","set","catch","console","log","render","maxWidth","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Cookies from \"js-cookie\"\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport styles from './LoginPage.module.css'\nimport { AuthApi } from \"../../../api/index\"\nimport Logo from '../../../assets/logo.png';\n\ninterface State {\n  username: string\n  password: string\n  redirect: boolean\n  failedToLogin: boolean\n}\n\n\nexport class LoginPage extends React.Component<{},State> {\nprivate authApi: AuthApi = new AuthApi()\n\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirect: false,\n      failedToLogin: false\n    }\n\n    this.setUsername = this.setUsername.bind(this)\n    this.setPassword = this.setPassword.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getJWT = this.getJWT.bind(this)\n  }\n\n  setUsername(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ username: e.target.value })\n  }\n\n  setPassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ password: e.target.value })\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    this.getJWT()\n  }\n\n  async getJWT() {\n    const requestParams = {\n      username: this.state.username,\n      password: this.state.password\n    }\n    this.authApi\n      .getJWT(requestParams)\n      .then(token => {\n        Cookies.set(\"jwt\", token)\n        this.setState({ redirect: true })\n      })\n      .catch(e => {\n        this.setState({ failedToLogin: true })\n        console.log(e)\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <Grid textAlign = \"center\" className={styles.Grid} verticalAlign = \"middle\">\n          <Grid.Column style={{ maxWidth: 450}}>\n            <Segment very padded stacked>\n              <img src={Logo} style={{height: \"15vh\"}} />\n              <Header as='h1' textAlign='center'>\n                Internio\n              </Header>\n\n              <Header.Subheader>\n                placeholder text about what Internio is\n              </Header.Subheader>\n              <br/>\n              <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n              <br/>\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n\n              <br/>\n              <Button color='blue'>\n                Login\n              </Button>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}