{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport * as runtime from '../runtime';\nimport { UserFromJSON } from '../models';\n\n/**\n * no description\n */\nexport class InternioApi extends runtime.BaseAPI {\n  /**\n   * Adding an internship to a User\n   */\n  async addInternshipToUserRaw(requestParameters) {\n    const queryParameters = {};\n\n    if (requestParameters.locationCity !== undefined) {\n      queryParameters['locationCity'] = requestParameters.locationCity;\n    }\n\n    if (requestParameters.locationState !== undefined) {\n      queryParameters['locationState'] = requestParameters.locationState;\n    }\n\n    if (requestParameters.startDate !== undefined) {\n      queryParameters['startDate'] = requestParameters.startDate.toISOString();\n    }\n\n    if (requestParameters.endDate !== undefined) {\n      queryParameters['endDate'] = requestParameters.endDate.toISOString();\n    }\n\n    if (requestParameters.company !== undefined) {\n      queryParameters['company'] = requestParameters.company;\n    }\n\n    if (requestParameters.username !== undefined) {\n      queryParameters['username'] = requestParameters.username;\n    }\n\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/internio/addInternship`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters\n    });\n    return new runtime.VoidApiResponse(response);\n  }\n  /**\n   * Adding an internship to a User\n   */\n\n\n  async addInternshipToUser(requestParameters) {\n    await this.addInternshipToUserRaw(requestParameters);\n  }\n  /**\n   * Getting user info\n   */\n\n\n  async getUserRaw(requestParameters) {\n    const queryParameters = {};\n\n    if (requestParameters.username !== undefined) {\n      queryParameters['username'] = requestParameters.username;\n    }\n\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/internio/user`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    });\n    return new runtime.JSONApiResponse(response, jsonValue => UserFromJSON(jsonValue));\n  }\n  /**\n   * Getting user info\n   */\n\n\n  async getUser(requestParameters) {\n    const response = await this.getUserRaw(requestParameters);\n    return await response.value();\n  }\n  /**\n   * load data\n   */\n\n\n  async loadDataRaw() {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/internio/data`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    });\n    return new runtime.VoidApiResponse(response);\n  }\n  /**\n   * load data\n   */\n\n\n  async loadData() {\n    await this.loadDataRaw();\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/Internio/ui/src/api/apis/InternioApi.ts"],"names":["runtime","UserFromJSON","InternioApi","BaseAPI","addInternshipToUserRaw","requestParameters","queryParameters","locationCity","undefined","locationState","startDate","toISOString","endDate","company","username","headerParameters","response","request","path","method","headers","query","VoidApiResponse","addInternshipToUser","getUserRaw","JSONApiResponse","jsonValue","getUser","value","loadDataRaw","loadData"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    User,\n    UserFromJSON,\n    UserToJSON,\n} from '../models';\n\nexport interface AddInternshipToUserRequest {\n    locationCity?: string;\n    locationState?: string;\n    startDate?: Date;\n    endDate?: Date;\n    company?: string;\n    username?: string;\n}\n\nexport interface GetUserRequest {\n    username?: string;\n}\n\n/**\n * no description\n */\nexport class InternioApi extends runtime.BaseAPI {\n\n    /**\n     * Adding an internship to a User\n     */\n    async addInternshipToUserRaw(requestParameters: AddInternshipToUserRequest): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.locationCity !== undefined) {\n            queryParameters['locationCity'] = requestParameters.locationCity;\n        }\n\n        if (requestParameters.locationState !== undefined) {\n            queryParameters['locationState'] = requestParameters.locationState;\n        }\n\n        if (requestParameters.startDate !== undefined) {\n            queryParameters['startDate'] = (requestParameters.startDate as any).toISOString();\n        }\n\n        if (requestParameters.endDate !== undefined) {\n            queryParameters['endDate'] = (requestParameters.endDate as any).toISOString();\n        }\n\n        if (requestParameters.company !== undefined) {\n            queryParameters['company'] = requestParameters.company;\n        }\n\n        if (requestParameters.username !== undefined) {\n            queryParameters['username'] = requestParameters.username;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/internio/addInternship`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Adding an internship to a User\n     */\n    async addInternshipToUser(requestParameters: AddInternshipToUserRequest): Promise<void> {\n        await this.addInternshipToUserRaw(requestParameters);\n    }\n\n    /**\n     * Getting user info\n     */\n    async getUserRaw(requestParameters: GetUserRequest): Promise<runtime.ApiResponse<User>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.username !== undefined) {\n            queryParameters['username'] = requestParameters.username;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/internio/user`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n    }\n\n    /**\n     * Getting user info\n     */\n    async getUser(requestParameters: GetUserRequest): Promise<User> {\n        const response = await this.getUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * load data\n     */\n    async loadDataRaw(): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/internio/data`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * load data\n     */\n    async loadData(): Promise<void> {\n        await this.loadDataRaw();\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}