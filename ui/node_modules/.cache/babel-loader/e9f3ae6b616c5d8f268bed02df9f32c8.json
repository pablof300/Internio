{"ast":null,"code":"var _jsxFileName = \"/Users/pabloestrada/Desktop/Internio/ui/src/components/dashboard/DashboardComponent/DashboardComponent.tsx\";\nimport React from \"react\";\nimport styles from \"./DashboardComponent.module.css\";\nimport { AuthApi } from \"../../../api/index\";\nimport { InternioApi } from \"../../../api/index\";\nimport Cookies from \"js-cookie\";\nimport { Redirect } from \"react-router-dom\";\nimport Datetime from \"react-datetime\";\nimport \"../../../../node_modules/react-datetime/css/react-datetime.css\";\nimport { Grid, Icon, Menu, Segment, Header, Button, Divider, Form, Input } from \"semantic-ui-react\";\nexport class DashboardComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authApi = new AuthApi();\n    this.internioApi = new InternioApi();\n    this.state = {\n      authenticated: false,\n      loading: true,\n      start: true,\n      addingNewInternship: false,\n      neighborhoodStage: false,\n      neighborhoods: [],\n      company: \"\",\n      city: \"\",\n      state: \"\"\n    };\n    this.addNewInternship = this.addNewInternship.bind(this);\n    this.setCompany = this.setCompany.bind(this);\n    this.setState = this.setState.bind(this);\n    this.setCity = this.setCity.bind(this);\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setEndDate = this.setEndDate.bind(this);\n    this.submitNewInternship = this.submitNewInternship.bind(this);\n  }\n\n  submitNewInternship(e) {\n    e.preventDefault();\n    console.log(\"GOING!!!\");\n    console.log(this.state.city);\n    console.log(this.state.state);\n    console.log(this.state.startDate);\n    console.log(this.state.endDate);\n    console.log(this.state.user);\n\n    if (this.state.user != null) {\n      this.internioApi.addInternshipToUser({\n        locationCity: this.state.city,\n        locationState: this.state.state,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        username: this.state.user.username\n      }).then(info => {\n        console.log(\"Setting current city\");\n        console.log(info.locationCity);\n        this.setState({\n          current: info,\n          neighborhoodStage: true\n        });\n      });\n    }\n  }\n\n  setStartDate(e) {\n    let date = e;\n    this.setState({\n      startDate: date.unix()\n    });\n  }\n\n  setEndDate(e) {\n    let date = e;\n    this.setState({\n      endDate: date.unix()\n    });\n  }\n\n  setCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  setCompany(e) {\n    this.setState({\n      company: e.target.value\n    });\n  }\n\n  addNewInternship() {\n    this.setState({\n      addingNewInternship: true,\n      start: false\n    });\n  }\n\n  getNeighborhoods() {\n    console.log(\"Current city is \");\n    console.log(this.state.current);\n\n    if (this.state.current != null) {\n      this.internioApi.getNeighborhoods({\n        locationCity: this.state.current.locationCity\n      }).then(neighborhoods => {\n        console.log(\"CATTTTTTT\");\n        console.log(neighborhoods);\n        this.setState({\n          neighborhoods: neighborhoods\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    const token = Cookies.get(\"jwt\");\n\n    if (token) {\n      const requestParams = {\n        token: token\n      };\n      console.log(\"Found JWT token, veryfing...\");\n      this.authApi.verifyJWT(requestParams).then(verified => {\n        this.internioApi.getUser({\n          username: verified\n        }).then(user => {\n          this.setState({\n            authenticated: verified != \"INVALID\",\n            loading: false,\n            user: user,\n            addingNewInternship: user.internships.length == 0\n          });\n        });\n      });\n    } else {\n      console.log(\"No JWT token available\");\n      this.setState({\n        authenticated: false,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(React.Fragment, null);\n    }\n\n    if (!this.state.authenticated) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.user != null) {\n      let username = this.state.user.nameFirst;\n    }\n\n    if (this.state.neighborhoodStage && this.state.neighborhoods.length == 0) {\n      this.getNeighborhoods();\n    }\n\n    console.log(this.state.neighborhoods.length);\n    return React.createElement(React.Fragment, null, React.createElement(Menu, {\n      as: Menu,\n      borderless: true,\n      visible: true,\n      vertical: true,\n      inverted: true,\n      className: styles.Sidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      name: \"home\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.state.user != null && this.state.user.nameFirst), React.createElement(Menu.Item, {\n      name: \"users\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Roommates\")), React.createElement(Menu.Item, {\n      name: \"repos\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"fork\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Account\")), React.createElement(Menu.Item, {\n      name: \"repos\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"fork\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Logout\"))), React.createElement(Segment, {\n      textAlign: \"center\",\n      basic: true,\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      padded: \"very\",\n      className: styles.InnerContainer,\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.addingNewInternship && !this.state.start && React.createElement(Segment, {\n      raised: true,\n      className: styles.NewTwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      label: \"Company\",\n      control: Input,\n      placeholder: \"Company name\",\n      onChange: this.setCompany,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      placeholder: \"City\",\n      onChange: this.setCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"State\"), \"// \", React.createElement(Input, {\n      placeholder: \"State\",\n      onChange: this.setState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Start date\")), React.createElement(Datetime, {\n      onChange: this.setStartDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: styles.Spacer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"End date\")), React.createElement(Datetime, {\n      onChange: this.setEndDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      className: styles.Button,\n      onClick: this.submitNewInternship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Submit\"))), this.state.neighborhoodStage && this.state.neighborhoods.length == 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Loading neighborhoods\"), this.state.neighborhoodStage && this.state.neighborhoods.length != 0 && React.createElement(React.Fragment, null, this.state.neighborhoods.map((value, index) => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, value.neighborhoodName);\n    })), this.state.addingNewInternship && this.state.start && React.createElement(Segment, {\n      raised: true,\n      className: styles.New,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \"Start your first search\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"All you need is your dates and location of your internship! We'll take of the rest\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      onClick: this.addNewInternship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Add\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/Internio/ui/src/components/dashboard/DashboardComponent/DashboardComponent.tsx"],"names":["React","styles","AuthApi","InternioApi","Cookies","Redirect","Datetime","Grid","Icon","Menu","Segment","Header","Button","Divider","Form","Input","DashboardComponent","Component","constructor","props","authApi","internioApi","state","authenticated","loading","start","addingNewInternship","neighborhoodStage","neighborhoods","company","city","addNewInternship","bind","setCompany","setState","setCity","setStartDate","setEndDate","submitNewInternship","e","preventDefault","console","log","startDate","endDate","user","addInternshipToUser","locationCity","locationState","username","then","info","current","date","unix","target","value","getNeighborhoods","componentDidMount","token","get","requestParams","verifyJWT","verified","getUser","internships","length","render","nameFirst","Sidebar","Container","InnerContainer","NewTwo","Spacer","map","index","neighborhoodName","New"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,OAAO,gEAAP;AAEA,SACEC,IADF,EAIEC,IAJF,EAMEC,IANF,EAOEC,OAPF,EAQEC,MARF,EASEC,MATF,EAUEC,OAVF,EAWEC,IAXF,EAaEC,KAbF,QAcO,mBAdP;AAuCA,OAAO,MAAMC,kBAAN,SAAiChB,KAAK,CAACiB,SAAvC,CAA4D;AAIjEC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AADqB,SAHfC,OAGe,GAHI,IAAIlB,OAAJ,EAGJ;AAAA,SAFfmB,WAEe,GAFY,IAAIlB,WAAJ,EAEZ;AAErB,SAAKmB,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,KADJ;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,mBAAmB,EAAE,KAJV;AAKXC,MAAAA,iBAAiB,EAAE,KALR;AAMXC,MAAAA,aAAa,EAAE,EANJ;AAQXC,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,IAAI,EAAE,EATK;AAUXR,MAAAA,KAAK,EAAE;AAVI,KAAb;AAYA,SAAKS,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,OAAL,GAAe,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKK,UAAL,GAAkB,KAAKA,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKM,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBN,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDM,EAAAA,mBAAmB,CAACC,CAAD,EAAS;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWQ,IAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWA,KAAvB;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWqB,SAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWsB,OAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWuB,IAAvB;;AAEA,QAAI,KAAKvB,KAAL,CAAWuB,IAAX,IAAmB,IAAvB,EAA6B;AAC3B,WAAKxB,WAAL,CACGyB,mBADH,CACuB;AACnBC,QAAAA,YAAY,EAAE,KAAKzB,KAAL,CAAWQ,IADN;AAEnBkB,QAAAA,aAAa,EAAE,KAAK1B,KAAL,CAAWA,KAFP;AAGnBqB,QAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWqB,SAHH;AAInBC,QAAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWsB,OAJD;AAKnBK,QAAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAWuB,IAAX,CAAgBI;AALP,OADvB,EAQGC,IARH,CAQSC,IAAD,IAAU;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACJ,YAAjB;AACA,aAAKb,QAAL,CAAc;AAACkB,UAAAA,OAAO,EAAED,IAAV;AAAgBxB,UAAAA,iBAAiB,EAAE;AAAnC,SAAd;AACD,OAZH;AAaD;AACF;;AAEDS,EAAAA,YAAY,CAACG,CAAD,EAA4B;AACtC,QAAIc,IAAI,GAAGd,CAAX;AACA,SAAKL,QAAL,CAAc;AAAES,MAAAA,SAAS,EAAEU,IAAI,CAACC,IAAL;AAAb,KAAd;AACD;;AAEDjB,EAAAA,UAAU,CAACE,CAAD,EAA4B;AACpC,QAAIc,IAAI,GAAGd,CAAX;AACA,SAAKL,QAAL,CAAc;AAAEU,MAAAA,OAAO,EAAES,IAAI,CAACC,IAAL;AAAX,KAAd;AACD;;AAEDnB,EAAAA,OAAO,CAACI,CAAD,EAAyC;AAC9C,SAAKL,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAES,CAAC,CAACgB,MAAF,CAASC;AAAjB,KAAd;AACD;;AAEDvB,EAAAA,UAAU,CAACM,CAAD,EAAyC;AACjD,SAAKL,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAEU,CAAC,CAACgB,MAAF,CAASC;AAApB,KAAd;AACD;;AAEDzB,EAAAA,gBAAgB,GAAG;AACjB,SAAKG,QAAL,CAAc;AAAER,MAAAA,mBAAmB,EAAE,IAAvB;AAA6BD,MAAAA,KAAK,EAAE;AAApC,KAAd;AACD;;AAEDgC,EAAAA,gBAAgB,GAAG;AACjBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAW8B,OAAvB;;AACA,QAAI,KAAK9B,KAAL,CAAW8B,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,WAAK/B,WAAL,CACCoC,gBADD,CACkB;AAACV,QAAAA,YAAY,EAAE,KAAKzB,KAAL,CAAW8B,OAAX,CAAmBL;AAAlC,OADlB,EAECG,IAFD,CAEOtB,aAAD,IAAmB;AACvBa,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACA,aAAKM,QAAL,CAAc;AAACN,UAAAA,aAAa,EAAEA;AAAhB,SAAd;AACD,OAND;AAOD;AACF;;AAED8B,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGvD,OAAO,CAACwD,GAAR,CAAY,KAAZ,CAAd;;AACA,QAAID,KAAJ,EAAW;AACT,YAAME,aAAa,GAAG;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAtB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,WAAKtB,OAAL,CAAa0C,SAAb,CAAuBD,aAAvB,EAAsCX,IAAtC,CAA2Ca,QAAQ,IAAI;AACrD,aAAK1C,WAAL,CAAiB2C,OAAjB,CAAyB;AAAEf,UAAAA,QAAQ,EAAEc;AAAZ,SAAzB,EAAiDb,IAAjD,CAAsDL,IAAI,IAAI;AAC1D,eAAKX,QAAL,CAAc;AACZX,YAAAA,aAAa,EAAEwC,QAAQ,IAAI,SADf;AAEZvC,YAAAA,OAAO,EAAE,KAFG;AAGZqB,YAAAA,IAAI,EAAEA,IAHM;AAIZnB,YAAAA,mBAAmB,EAAEmB,IAAI,CAACoB,WAAL,CAAiBC,MAAjB,IAA2B;AAJpC,WAAd;AAMH,SAPD;AAQD,OATD;AAUD,KAbD,MAaO;AACLzB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAKR,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAd;AACD;AACF;;AAED2C,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK7C,KAAL,CAAWE,OAAf,EAAwB;AACtB,aAAO,yCAAP;AACD;;AACD,QAAI,CAAC,KAAKF,KAAL,CAAWC,aAAhB,EAA+B;AAC7B,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAI,KAAKD,KAAL,CAAWuB,IAAX,IAAmB,IAAvB,EAA6B;AAC3B,UAAII,QAAgB,GAAG,KAAK3B,KAAL,CAAWuB,IAAX,CAAgBuB,SAAvC;AACD;;AACD,QAAI,KAAK9C,KAAL,CAAWK,iBAAX,IAAgC,KAAKL,KAAL,CAAWM,aAAX,CAAyBsC,MAAzB,IAAmC,CAAvE,EAA0E;AACxE,WAAKT,gBAAL;AACD;;AAEDhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWM,aAAX,CAAyBsC,MAArC;AACA,WACE,0CACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAEzD,IADN;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,SAAS,EAAER,MAAM,CAACoE,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAK/C,KAAL,CAAWuB,IAAX,IAAmB,IAAnB,IAA2B,KAAKvB,KAAL,CAAWuB,IAAX,CAAgBuB,SAF9C,CARF,EAYE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAZF,EAgBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAhBF,EAoBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CApBF,CADF,EA0BE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,MAAjC;AAAkC,MAAA,SAAS,EAAEnE,MAAM,CAACqE,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAErE,MAAM,CAACsE,cAAzC;AAAyD,MAAA,OAAO,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjD,KAAL,CAAWI,mBAAX,IAAkC,CAAC,KAAKJ,KAAL,CAAWG,KAA9C,IACC,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAgB,MAAA,SAAS,EAAExB,MAAM,CAACuE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAEzD,KAFX;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,QAAQ,EAAE,KAAKkB,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPF,EAWE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,SAEK,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,QAAQ,EAAE,KAAKD,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAfF,EAkBE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAoBE;AAAG,MAAA,SAAS,EAAEnC,MAAM,CAACwE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CArBF,EAwBE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKpC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EA0BE,oBAAC,MAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,SAAS,EAAEpC,MAAM,CAACW,MAFpB;AAGE,MAAA,OAAO,EAAE,KAAK0B,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,CADF,CAFJ,EAwCG,KAAKhB,KAAL,CAAWK,iBAAX,IAAgC,KAAKL,KAAL,CAAWM,aAAX,CAAyBsC,MAAzB,IAAmC,CAAnE,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAzCN,EA4CG,KAAK5C,KAAL,CAAWK,iBAAX,IAAgC,KAAKL,KAAL,CAAWM,aAAX,CAAyBsC,MAAzB,IAAmC,CAAnE,IACC,0CACG,KAAK5C,KAAL,CAAWM,aAAX,CAAyB8C,GAAzB,CAA6B,CAAClB,KAAD,EAAQmB,KAAR,KAAkB;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAInB,KAAK,CAACoB,gBAAV,CAAP;AACD,KAFA,CADH,CA7CJ,EAoDI,KAAKtD,KAAL,CAAWI,mBAAX,IACA,KAAKJ,KAAL,CAAWG,KADX,IAEE,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAgB,MAAA,SAAS,EAAExB,MAAM,CAAC4E,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,IAAI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,6BAGE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAHF,CADF,EASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAK9C,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,CAtDN,CADF,CADF,CA1BF,CADF;AAuGD;;AApOgE","sourcesContent":["import React from \"react\";\nimport styles from \"./DashboardComponent.module.css\";\nimport { AuthApi } from \"../../../api/index\";\nimport { InternioApi } from \"../../../api/index\";\nimport Cookies from \"js-cookie\";\nimport { Redirect } from \"react-router-dom\";\nimport { User, Neighborhood, ObjectId, InternshipInfo } from \"../../../api/index\";\nimport Datetime from \"react-datetime\";\nimport * as moment from \"moment\";\n\nimport \"../../../../node_modules/react-datetime/css/react-datetime.css\";\n\nimport {\n  Grid,\n  Image,\n  Accordion,\n  Icon,\n  Sidebar,\n  Menu,\n  Segment,\n  Header,\n  Button,\n  Divider,\n  Form,\n  Checkbox,\n  Input\n} from \"semantic-ui-react\";\n\ninterface Props {}\n\ninterface State {\n  authenticated: Boolean;\n  loading: Boolean;\n  start: Boolean;\n  addingNewInternship: Boolean;\n\n  neighborhoodStage: Boolean;\n  neighborhoods: Neighborhood[];\n\n  user?: User;\n\n  current?: InternshipInfo;\n\n  // Create InternshipInfo\n  company: string;\n  city: string;\n  state: string;\n  startDate?: number;\n  endDate?: number;\n}\n\nexport class DashboardComponent extends React.Component<{}, State> {\n  private authApi: AuthApi = new AuthApi();\n  private internioApi: InternioApi = new InternioApi();\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      loading: true,\n      start: true,\n      addingNewInternship: false,\n      neighborhoodStage: false,\n      neighborhoods: [],\n\n      company: \"\",\n      city: \"\",\n      state: \"\"\n    };\n    this.addNewInternship = this.addNewInternship.bind(this);\n    this.setCompany = this.setCompany.bind(this);\n    this.setState = this.setState.bind(this);\n    this.setCity = this.setCity.bind(this);\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setEndDate = this.setEndDate.bind(this);\n    this.submitNewInternship = this.submitNewInternship.bind(this);\n  }\n\n  submitNewInternship(e: any) {\n    e.preventDefault();\n    console.log(\"GOING!!!\");\n    console.log(this.state.city);\n    console.log(this.state.state);\n    console.log(this.state.startDate);\n    console.log(this.state.endDate);\n    console.log(this.state.user);\n\n    if (this.state.user != null) {\n      this.internioApi\n        .addInternshipToUser({\n          locationCity: this.state.city,\n          locationState: this.state.state,\n          startDate: this.state.startDate,\n          endDate: this.state.endDate,\n          username: this.state.user.username\n        })\n        .then((info) => {\n          console.log(\"Setting current city\");\n          console.log(info.locationCity);\n          this.setState({current: info, neighborhoodStage: true})\n        });\n    }\n  }\n\n  setStartDate(e: string | moment.Moment) {\n    let date = e as moment.Moment;\n    this.setState({ startDate: date.unix() });\n  }\n\n  setEndDate(e: string | moment.Moment) {\n    let date = e as moment.Moment;\n    this.setState({ endDate: date.unix() });\n  }\n\n  setCity(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ city: e.target.value });\n  }\n\n  setCompany(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ company: e.target.value });\n  }\n\n  addNewInternship() {\n    this.setState({ addingNewInternship: true, start: false });\n  }\n\n  getNeighborhoods() {\n    console.log(\"Current city is \")\n    console.log(this.state.current)\n    if (this.state.current != null) {\n      this.internioApi\n      .getNeighborhoods({locationCity: this.state.current.locationCity})\n      .then((neighborhoods) => {\n        console.log(\"CATTTTTTT\")\n        console.log(neighborhoods)\n        this.setState({neighborhoods: neighborhoods})\n      })\n    }\n  }\n\n  componentDidMount() {\n    const token = Cookies.get(\"jwt\");\n    if (token) {\n      const requestParams = { token: token };\n      console.log(\"Found JWT token, veryfing...\");\n      this.authApi.verifyJWT(requestParams).then(verified => {\n        this.internioApi.getUser({ username: verified }).then(user => {\n            this.setState({\n              authenticated: verified != \"INVALID\",\n              loading: false,\n              user: user,\n              addingNewInternship: user.internships.length == 0\n            });\n        });\n      });\n    } else {\n      console.log(\"No JWT token available\");\n      this.setState({ authenticated: false, loading: false });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <></>;\n    }\n    if (!this.state.authenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (this.state.user != null) {\n      let username: string = this.state.user.nameFirst;\n    }\n    if (this.state.neighborhoodStage && this.state.neighborhoods.length == 0) {\n      this.getNeighborhoods()\n    }\n\n    console.log(this.state.neighborhoods.length)\n    return (\n      <>\n        <Menu\n          as={Menu}\n          borderless\n          visible={true}\n          vertical\n          inverted\n          className={styles.Sidebar}\n        >\n          <Menu.Item name=\"home\" onClick={() => {}}>\n            <Icon name=\"home\" />\n            {this.state.user != null && this.state.user.nameFirst}\n          </Menu.Item>\n          <Menu.Item name=\"users\" onClick={() => {}}>\n            <Icon name=\"users\" />\n            <span>Roommates</span>\n          </Menu.Item>\n          <Menu.Item name=\"repos\" onClick={() => {}}>\n            <Icon name=\"fork\" />\n            <span>Account</span>\n          </Menu.Item>\n          <Menu.Item name=\"repos\" onClick={() => {}}>\n            <Icon name=\"fork\" />\n            <span>Logout</span>\n          </Menu.Item>\n        </Menu>\n        <Segment textAlign=\"center\" basic className={styles.Container}>\n          <Segment padded=\"very\" className={styles.InnerContainer} stacked>\n            <Grid verticalAlign=\"middle\" centered>\n              {this.state.addingNewInternship && !this.state.start && (\n                <Segment raised className={styles.NewTwo}>\n                  <Form>\n                    <Form.Field\n                      label=\"Company\"\n                      control={Input}\n                      placeholder=\"Company name\"\n                      onChange={this.setCompany}\n                    />\n                    <Form.Field>\n                      <label>City</label>\n                      <Input placeholder=\"City\" onChange={this.setCity} />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>State</label>\n                      // <Input placeholder=\"State\" onChange={this.setState} />\n                    </Form.Field>\n                    <label>\n                      <strong>Start date</strong>\n                    </label>\n                    <Datetime onChange={this.setStartDate} />\n\n                    <p className={styles.Spacer}></p>\n                    <label>\n                      <strong>End date</strong>\n                    </label>\n                    <Datetime onChange={this.setEndDate} />\n\n                    <Button\n                      primary\n                      className={styles.Button}\n                      onClick={this.submitNewInternship}\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                </Segment>\n              )}\n\n              {this.state.neighborhoodStage && this.state.neighborhoods.length == 0 &&\n                  <p>Loading neighborhoods</p>\n              }\n\n              {this.state.neighborhoodStage && this.state.neighborhoods.length != 0 &&\n                <>\n                  {this.state.neighborhoods.map((value, index) => {\n                    return <p>{value.neighborhoodName}</p>\n                  })}\n                </>\n              }\n\n              { this.state.addingNewInternship &&\n                this.state.start && (\n                  <Segment raised className={styles.New}>\n                    <Header as=\"h2\" icon>\n                      <Icon name=\"settings\" />\n                      Start your first search\n                      <Header.Subheader>\n                        All you need is your dates and location of your\n                        internship! We'll take of the rest\n                      </Header.Subheader>\n                    </Header>\n                    <Divider />\n                    <Button primary onClick={this.addNewInternship}>\n                      Add\n                    </Button>\n                  </Segment>\n                )}\n            </Grid>\n          </Segment>\n        </Segment>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}