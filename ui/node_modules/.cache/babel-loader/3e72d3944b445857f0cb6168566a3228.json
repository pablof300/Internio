{"ast":null,"code":"var _jsxFileName = \"/Users/pabloestrada/Desktop/Internio/ui/src/components/dashboard/DashboardComponent/DashboardComponent.tsx\";\nimport React from \"react\";\nimport styles from \"./DashboardComponent.module.css\";\nimport { AuthApi } from \"../../../api/index\";\nimport { InternioApi } from \"../../../api/index\";\nimport Cookies from \"js-cookie\";\nimport { Redirect } from \"react-router-dom\";\nimport { DateSingleInput } from '@datepicker-react/styled';\nimport { Grid, Icon, Menu, Segment, Header, Button, Divider, Form } from \"semantic-ui-react\";\nexport class DashboardComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authApi = new AuthApi();\n    this.internioApi = new InternioApi();\n    this.state = {\n      authenticated: false,\n      loading: true,\n      addingNewInternship: false,\n      company: \"\",\n      city: \"\",\n      state: \"\"\n    };\n    this.addNewInternship = this.addNewInternship.bind(this);\n  }\n\n  addNewInternship() {\n    this.setState({\n      addingNewInternship: true\n    });\n  }\n\n  componentDidMount() {\n    const token = Cookies.get(\"jwt\");\n\n    if (token) {\n      const requestParams = {\n        token: token\n      };\n      console.log(\"Found JWT token, veryfing...\");\n      this.authApi.verifyJWT(requestParams).then(verified => {\n        this.internioApi.getUser({\n          username: verified\n        }).then(user => {\n          this.setState({\n            authenticated: verified != \"INVALID\",\n            loading: false,\n            user: user\n          });\n        });\n      });\n    } else {\n      console.log(\"No JWT token available\");\n      this.setState({\n        authenticated: false,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(React.Fragment, null, \" \");\n    }\n\n    if (!this.state.authenticated) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n\n    let d = new Date();\n    return React.createElement(React.Fragment, null, React.createElement(Menu, {\n      as: Menu,\n      borderless: true,\n      visible: true,\n      vertical: true,\n      inverted: true,\n      className: styles.Sidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      name: \"home\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Menu.Item, {\n      name: \"users\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Roommates\")), React.createElement(Menu.Item, {\n      name: \"repos\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"fork\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Account\")), React.createElement(Menu.Item, {\n      name: \"repos\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"fork\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Logout\"))), React.createElement(Segment, {\n      textAlign: \"center\",\n      basic: true,\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      padded: \"very\",\n      className: styles.InnerContainer,\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.addingNewInternship && React.createElement(Segment, {\n      raised: true,\n      className: styles.NewTwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Company\"), React.createElement(\"input\", {\n      placeholder: \"Company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"input\", {\n      placeholder: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Start date\")), React.createElement(DateSingleInput, {\n      onDateChange: this.addNewInternship,\n      onFocusChange: this.addNewInternship,\n      date: null,\n      showDatepicker: false // START_DATE, END_DATE or null\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"End date\")), React.createElement(DateSingleInput, {\n      onDateChange: this.addNewInternship,\n      onFocusChange: this.addNewInternship,\n      date: null,\n      showDatepicker: false // START_DATE, END_DATE or null\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: styles.Button,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Submit\"))), !this.state.addingNewInternship && this.state.user != null && this.state.user.internships.length == 0 && React.createElement(Segment, {\n      raised: true,\n      className: styles.New,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"Start your first search\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"All you need is your dates and location of your internship! We'll take of the rest\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      onClick: this.addNewInternship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Add\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/Internio/ui/src/components/dashboard/DashboardComponent/DashboardComponent.tsx"],"names":["React","styles","AuthApi","InternioApi","Cookies","Redirect","DateSingleInput","Grid","Icon","Menu","Segment","Header","Button","Divider","Form","DashboardComponent","Component","constructor","props","authApi","internioApi","state","authenticated","loading","addingNewInternship","company","city","addNewInternship","bind","setState","componentDidMount","token","get","requestParams","console","log","verifyJWT","then","verified","getUser","username","user","render","d","Date","Sidebar","Container","InnerContainer","NewTwo","internships","length","New"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAAoCC,eAApC,QAAsE,0BAAtE;AAEA,SACEC,IADF,EAIEC,IAJF,EAMEC,IANF,EAOEC,OAPF,EAQEC,MARF,EASEC,MATF,EAUEC,OAVF,EAWEC,IAXF,QAaO,mBAbP;AA+BA,OAAO,MAAMC,kBAAN,SAAiCf,KAAK,CAACgB,SAAvC,CAA4D;AAIjEC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AADqB,SAHfC,OAGe,GAHI,IAAIjB,OAAJ,EAGJ;AAAA,SAFfkB,WAEe,GAFY,IAAIjB,WAAJ,EAEZ;AAErB,SAAKkB,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,KADJ;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,mBAAmB,EAAE,KAHV;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,IAAI,EAAE,EAPK;AAQXL,MAAAA,KAAK,EAAE;AARI,KAAb;AAWA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,GAAG;AACjB,SAAKE,QAAL,CAAc;AAACL,MAAAA,mBAAmB,EAAE;AAAtB,KAAd;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AACpB,UAAMC,KAAK,GAAG3B,OAAO,CAAC4B,GAAR,CAAY,KAAZ,CAAd;;AACA,QAAID,KAAJ,EAAW;AACT,YAAME,aAAa,GAAG;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,WAAKhB,OAAL,CAAaiB,SAAb,CAAuBH,aAAvB,EAAsCI,IAAtC,CAA2CC,QAAQ,IAAI;AACrD,aAAKlB,WAAL,CAAiBmB,OAAjB,CAAyB;AAACC,UAAAA,QAAQ,EAAEF;AAAX,SAAzB,EAA+CD,IAA/C,CAAoDI,IAAI,IAAI;AAC1D,eAAKZ,QAAL,CAAc;AAAEP,YAAAA,aAAa,EAAEgB,QAAQ,IAAI,SAA7B;AAAwCf,YAAAA,OAAO,EAAE,KAAjD;AAAwDkB,YAAAA,IAAI,EAAEA;AAA9D,WAAd;AACD,SAFD;AAGD,OAJD;AAKD,KARD,MAQO;AACLP,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAKN,QAAL,CAAc;AAAEP,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAd;AACD;AACF;;AAECmB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKrB,KAAL,CAAWE,OAAf,EAAwB;AACtB,aAAO,8CAAP;AACD;;AACD,QAAI,CAAC,KAAKF,KAAL,CAAWC,aAAhB,EAA+B;AAC7B,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAIqB,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,WACE,0CACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAEnC,IADN;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,SAAS,EAAER,MAAM,CAAC4C,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CARF,EAYE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAZF,EAgBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAhBF,EAoBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CApBF,CADF,EA0BE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,EAAE5C,MAAM,CAAC6C,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,MAAhB;AAAsB,MAAA,SAAS,EAAE7C,MAAM,CAAC8C,cAAxC;AAAwD,MAAA,OAAO,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK1B,KAAL,CAAWG,mBAAX,IACA,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAgB,MAAA,SAAS,EAAEvB,MAAM,CAAC+C,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAO,MAAA,WAAW,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,MAAA,WAAW,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,MAAA,WAAW,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP,CAbF,EAcE,oBAAC,eAAD;AACE,MAAA,YAAY,EAAE,KAAKrB,gBADrB;AAEE,MAAA,aAAa,EAAE,KAAKA,gBAFtB;AAGE,MAAA,IAAI,EAAE,IAHR;AAIE,MAAA,cAAc,EAAE,KAJlB,CAIyB;AAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CApBF,EAqBE,oBAAC,eAAD;AACE,MAAA,YAAY,EAAE,KAAKA,gBADrB;AAEE,MAAA,aAAa,EAAE,KAAKA,gBAFtB;AAGE,MAAA,IAAI,EAAE,IAHR;AAIE,MAAA,cAAc,EAAE,KAJlB,CAIyB;AAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EA2BE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE1B,MAAM,CAACW,MAA1B;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,CADF,CAFF,EAmCE,CAAC,KAAKS,KAAL,CAAWG,mBAAZ,IAAmC,KAAKH,KAAL,CAAWoB,IAAX,IAAmB,IAAtD,IAA8D,KAAKpB,KAAL,CAAWoB,IAAX,CAAgBQ,WAAhB,CAA4BC,MAA5B,IAAsC,CAApG,IACA,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAgB,MAAA,SAAS,EAAEjD,MAAM,CAACkD,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,IAAI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,6BAGE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAHF,CADF,EAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKxB,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CApCF,CADA,CALF,CA1BF,CADF;AAwFD;;AAxIgE","sourcesContent":["import React from \"react\";\nimport styles from \"./DashboardComponent.module.css\";\nimport { AuthApi } from \"../../../api/index\"\nimport { InternioApi } from \"../../../api/index\"\nimport Cookies from \"js-cookie\"\nimport { Redirect } from \"react-router-dom\"\nimport { User } from \"../../../api/index\"\nimport {Datepicker, DateRangeInput, DateSingleInput, START_DATE} from '@datepicker-react/styled'\n\nimport {\n  Grid,\n  Image,\n  Accordion,\n  Icon,\n  Sidebar,\n  Menu,\n  Segment,\n  Header,\n  Button,\n  Divider,\n  Form,\n  Checkbox\n} from \"semantic-ui-react\";\n\ninterface Props {}\n\ninterface State {\n  authenticated: Boolean,\n  loading: Boolean,\n  addingNewInternship: Boolean,\n  user?: User,\n\n  // Create InternshipInfo\n  company: string,\n  city: string,\n  state: string,\n  startDate?: Date,\n  endDate?: Date\n}\n\nexport class DashboardComponent extends React.Component<{}, State> {\n  private authApi: AuthApi = new AuthApi()\n  private internioApi: InternioApi = new InternioApi()\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      loading: true,\n      addingNewInternship: false,\n\n\n      company: \"\",\n      city: \"\",\n      state: \"\",\n\n    }\n    this.addNewInternship = this.addNewInternship.bind(this);\n  }\n\n  addNewInternship() {\n    this.setState({addingNewInternship: true})\n  }\n\n  componentDidMount() {\n  const token = Cookies.get(\"jwt\")\n  if (token) {\n    const requestParams = { token: token }\n    console.log(\"Found JWT token, veryfing...\")\n    this.authApi.verifyJWT(requestParams).then(verified => {\n      this.internioApi.getUser({username: verified}).then(user => {\n        this.setState({ authenticated: verified != \"INVALID\", loading: false, user: user})\n      })\n    })\n  } else {\n    console.log(\"No JWT token available\")\n    this.setState({ authenticated: false, loading: false })\n  }\n}\n\n  render() {\n    if (this.state.loading) {\n      return <> </>\n    }\n    if (!this.state.authenticated) {\n      return <Redirect to=\"/login\" />\n    }\n    let d = new Date()\n    return (\n      <>\n        <Menu\n          as={Menu}\n          borderless\n          visible={true}\n          vertical\n          inverted\n          className={styles.Sidebar}\n        >\n          <Menu.Item name=\"home\" onClick={() => {}}>\n            <Icon name=\"home\" />\n            <span>Home</span>\n          </Menu.Item>\n          <Menu.Item name=\"users\" onClick={() => {}}>\n            <Icon name=\"users\" />\n            <span>Roommates</span>\n          </Menu.Item>\n          <Menu.Item name=\"repos\" onClick={() => {}}>\n            <Icon name=\"fork\" />\n            <span>Account</span>\n          </Menu.Item>\n          <Menu.Item name=\"repos\" onClick={() => {}}>\n            <Icon name=\"fork\" />\n            <span>Logout</span>\n          </Menu.Item>\n        </Menu>\n        <Segment\n          textAlign=\"center\"\n          basic\n          className={styles.Container}\n          >\n          <Segment padded='very'className={styles.InnerContainer} stacked>\n          <Grid verticalAlign='middle' centered>\n          { this.state.addingNewInternship &&\n            <Segment raised className={styles.NewTwo}>\n              <Form>\n                <Form.Field>\n                  <label>Company</label>\n                  <input placeholder='Company' />\n                </Form.Field>\n                <Form.Field>\n                  <label>City</label>\n                  <input placeholder='City' />\n                </Form.Field>\n                <Form.Field>\n                  <label>State</label>\n                  <input placeholder='State' />\n                </Form.Field>\n                <label><strong>Start date</strong></label>\n                <DateSingleInput\n                  onDateChange={this.addNewInternship}\n                  onFocusChange={this.addNewInternship}\n                  date={null}\n                  showDatepicker={false} // START_DATE, END_DATE or null\n                />\n                <label><strong>End date</strong></label>\n                <DateSingleInput\n                  onDateChange={this.addNewInternship}\n                  onFocusChange={this.addNewInternship}\n                  date={null}\n                  showDatepicker={false} // START_DATE, END_DATE or null\n                />\n                <Button className={styles.Button} type='submit'>Submit</Button>\n              </Form>\n            </Segment>\n          }\n\n          { !this.state.addingNewInternship && this.state.user != null && this.state.user.internships.length == 0 &&\n            <Segment raised className={styles.New}>\n              <Header as='h2' icon>\n                <Icon name='settings' />\n                Start your first search\n                <Header.Subheader>\n                  All you need is your dates and location of your internship! We'll take of the rest\n                </Header.Subheader>\n              </Header>\n              <Divider />\n              <Button primary onClick={this.addNewInternship}>\n              Add\n              </Button>\n            </Segment>\n          }\n          </Grid>\n          </Segment>\n        </Segment>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}