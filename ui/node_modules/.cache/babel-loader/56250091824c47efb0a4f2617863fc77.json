{"ast":null,"code":"var _jsxFileName = \"/Users/jennybaik/Desktop/internio/ui/src/components/messages/MessageComponent/MessageComponent.tsx\";\nimport React from \"react\";\nimport styles from \"./MessageComponent.module.css\";\nimport { Message, Icon } from \"semantic-ui-react\";\nexport class MessageComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.iconName = void 0;\n    this.color = void 0;\n\n    if (this.props.type == 'failure') {\n      this.iconName = 'times';\n      this.color = 'red';\n    } else {\n      this.iconName = 'check';\n      this.color = 'green';\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Message, {\n      icon: true,\n      className: styles.Message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: this.iconName,\n      color: this.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Message.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.title), this.props.content)));\n  }\n\n}","map":{"version":3,"sources":["/Users/jennybaik/Desktop/internio/ui/src/components/messages/MessageComponent/MessageComponent.tsx"],"names":["React","styles","Message","Icon","MessageComponent","Component","constructor","props","iconName","color","type","render","title","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,mBAA9B;AAQA,OAAO,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA0D;AAI/DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAHlBC,QAGkB;AAAA,SAFlBC,KAEkB;;AAExB,QAAI,KAAKF,KAAL,CAAWG,IAAX,IAAmB,SAAvB,EAAkC;AAChC,WAAKF,QAAL,GAAgB,OAAhB;AACA,WAAKC,KAAL,GAAa,KAAb;AACD,KAHD,MAGO;AACL,WAAKD,QAAL,GAAgB,OAAhB;AACA,WAAKC,KAAL,GAAa,OAAb;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE,0CACA,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAc,MAAA,SAAS,EAAEV,MAAM,CAACC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKM,QAAjB;AAAgD,MAAA,KAAK,EAAE,KAAKC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKF,KAAL,CAAWK,KAA5B,CADF,EAEG,KAAKL,KAAL,CAAWM,OAFd,CAFF,CADA,CADF;AAWD;;AA3B8D","sourcesContent":["import React from \"react\"\nimport styles from \"./MessageComponent.module.css\"\nimport { Message, Icon } from \"semantic-ui-react\"\n\ninterface Props {\n  title: string\n  content: string\n  type: string\n}\n\nexport class MessageComponent extends React.Component<Props, {}> {\n  private iconName: string\n  private color: string\n\n  constructor(props: Props) {\n    super(props)\n    if (this.props.type == 'failure') {\n      this.iconName = 'times'\n      this.color = 'red'\n    } else {\n      this.iconName = 'check'\n      this.color = 'green'\n    }\n  }\n\n  render() {\n    return (\n      <>\n      <Message icon className={styles.Message}>\n        <Icon name={this.iconName as 'times' | 'check'} color={this.color as 'green' | 'red'} />\n        <Message.Content>\n          <Message.Header>{this.props.title}</Message.Header>\n          {this.props.content}\n        </Message.Content>\n      </Message>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}