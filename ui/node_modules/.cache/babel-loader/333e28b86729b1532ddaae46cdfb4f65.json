{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport * as runtime from '../runtime';\n\n/**\n * no description\n */\nexport class AuthApi extends runtime.BaseAPI {\n  /**\n   * Sign a new JWT token with username and password information\n   */\n  async getJWTRaw(requestParameters) {\n    const queryParameters = {};\n\n    if (requestParameters.username !== undefined) {\n      queryParameters['username'] = requestParameters.username;\n    }\n\n    if (requestParameters.password !== undefined) {\n      queryParameters['password'] = requestParameters.password;\n    }\n\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/auth/sign`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    });\n    return new runtime.TextApiResponse(response);\n  }\n  /**\n   * Sign a new JWT token with username and password information\n   */\n\n\n  async getJWT(requestParameters) {\n    const response = await this.getJWTRaw(requestParameters);\n    return await response.value();\n  }\n  /**\n   * Verify a JWT token\n   */\n\n\n  async verifyJWTRaw(requestParameters) {\n    const queryParameters = {};\n\n    if (requestParameters.token !== undefined) {\n      queryParameters['token'] = requestParameters.token;\n    }\n\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/auth/verify`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    });\n    return new runtime.TextApiResponse(response);\n  }\n  /**\n   * Verify a JWT token\n   */\n\n\n  async verifyJWT(requestParameters) {\n    const response = await this.verifyJWTRaw(requestParameters);\n    return await response.value();\n  }\n\n}","map":{"version":3,"sources":["/Users/pabloestrada/Desktop/Internio/ui/src/api/apis/AuthApi.ts"],"names":["runtime","AuthApi","BaseAPI","getJWTRaw","requestParameters","queryParameters","username","undefined","password","headerParameters","response","request","path","method","headers","query","TextApiResponse","getJWT","value","verifyJWTRaw","token","verifyJWT"],"mappings":"AAAA;;AACA;;AACA;;;;;;;;;;;AAaA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;;AAWA;;;AAGA,OAAO,MAAMC,OAAN,SAAsBD,OAAO,CAACE,OAA9B,CAAsC;AAEzC;;;AAGA,QAAMC,SAAN,CAAgBC,iBAAhB,EAAwF;AACpF,UAAMC,eAAkC,GAAG,EAA3C;;AAEA,QAAID,iBAAiB,CAACE,QAAlB,KAA+BC,SAAnC,EAA8C;AAC1CF,MAAAA,eAAe,CAAC,UAAD,CAAf,GAA8BD,iBAAiB,CAACE,QAAhD;AACH;;AAED,QAAIF,iBAAiB,CAACI,QAAlB,KAA+BD,SAAnC,EAA8C;AAC1CF,MAAAA,eAAe,CAAC,UAAD,CAAf,GAA8BD,iBAAiB,CAACI,QAAhD;AACH;;AAED,UAAMC,gBAAqC,GAAG,EAA9C;AAEA,UAAMC,QAAQ,GAAG,MAAM,KAAKC,OAAL,CAAa;AAChCC,MAAAA,IAAI,EAAG,YADyB;AAEhCC,MAAAA,MAAM,EAAE,KAFwB;AAGhCC,MAAAA,OAAO,EAAEL,gBAHuB;AAIhCM,MAAAA,KAAK,EAAEV;AAJyB,KAAb,CAAvB;AAOA,WAAO,IAAIL,OAAO,CAACgB,eAAZ,CAA4BN,QAA5B,CAAP;AACH;AAED;;;;;AAGA,QAAMO,MAAN,CAAab,iBAAb,EAAgE;AAC5D,UAAMM,QAAQ,GAAG,MAAM,KAAKP,SAAL,CAAeC,iBAAf,CAAvB;AACA,WAAO,MAAMM,QAAQ,CAACQ,KAAT,EAAb;AACH;AAED;;;;;AAGA,QAAMC,YAAN,CAAmBf,iBAAnB,EAA8F;AAC1F,UAAMC,eAAkC,GAAG,EAA3C;;AAEA,QAAID,iBAAiB,CAACgB,KAAlB,KAA4Bb,SAAhC,EAA2C;AACvCF,MAAAA,eAAe,CAAC,OAAD,CAAf,GAA2BD,iBAAiB,CAACgB,KAA7C;AACH;;AAED,UAAMX,gBAAqC,GAAG,EAA9C;AAEA,UAAMC,QAAQ,GAAG,MAAM,KAAKC,OAAL,CAAa;AAChCC,MAAAA,IAAI,EAAG,cADyB;AAEhCC,MAAAA,MAAM,EAAE,KAFwB;AAGhCC,MAAAA,OAAO,EAAEL,gBAHuB;AAIhCM,MAAAA,KAAK,EAAEV;AAJyB,KAAb,CAAvB;AAOA,WAAO,IAAIL,OAAO,CAACgB,eAAZ,CAA4BN,QAA5B,CAAP;AACH;AAED;;;;;AAGA,QAAMW,SAAN,CAAgBjB,iBAAhB,EAAsE;AAClE,UAAMM,QAAQ,GAAG,MAAM,KAAKS,YAAL,CAAkBf,iBAAlB,CAAvB;AACA,WAAO,MAAMM,QAAQ,CAACQ,KAAT,EAAb;AACH;;AAhEwC","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\n\nexport interface GetJWTRequest {\n    username?: string;\n    password?: string;\n}\n\nexport interface VerifyJWTRequest {\n    token?: string;\n}\n\n/**\n * no description\n */\nexport class AuthApi extends runtime.BaseAPI {\n\n    /**\n     * Sign a new JWT token with username and password information\n     */\n    async getJWTRaw(requestParameters: GetJWTRequest): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.username !== undefined) {\n            queryParameters['username'] = requestParameters.username;\n        }\n\n        if (requestParameters.password !== undefined) {\n            queryParameters['password'] = requestParameters.password;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/auth/sign`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Sign a new JWT token with username and password information\n     */\n    async getJWT(requestParameters: GetJWTRequest): Promise<string> {\n        const response = await this.getJWTRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Verify a JWT token\n     */\n    async verifyJWTRaw(requestParameters: VerifyJWTRequest): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.token !== undefined) {\n            queryParameters['token'] = requestParameters.token;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/auth/verify`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Verify a JWT token\n     */\n    async verifyJWT(requestParameters: VerifyJWTRequest): Promise<string> {\n        const response = await this.verifyJWTRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}